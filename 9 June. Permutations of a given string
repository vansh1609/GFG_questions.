class Solution
{
	public:
	void perm(string s,int l,int h,vector<string> &v)
	{
	    if(l==h)
	    v.push_back(s);
	    else
	    {
	        for(int i=l;i<=h;i++)
	        {
	            char c=s[i];
	            s[i]=s[l];
	            s[l]=c;
	            perm(s,l+1,h,v);
	            char d=s[i];
	            s[i]=s[l];
	            s[l]=d;
	        }
	    }
	}
		vector<string>find_permutation(string S)
		{
		    // Code here there
		    vector<string> v;
		    perm(S,0,S.size()-1,v);
		    map<string,int> m;
		    for(int i=0;i<v.size();i++)
		    m[v[i]]++;
		    map<string,int>::iterator ir=m.begin();
		    v.clear();
		    for(;ir!=m.end();ir++)
		    v.push_back(ir->first);
		    sort(v.begin(),v.end());
		    return v;
		}
};


