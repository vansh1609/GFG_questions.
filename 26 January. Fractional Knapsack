class Solution
{
    public:
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        vector<pair<double,pair<int,int>>> v;
        double profit=0;
        for(int i=0;i<n;i++)
        {
            double d=arr[i].value/double(arr[i].weight);
            v.push_back({d,{arr[i].value,arr[i].weight}});
        }
        int i=v.size()-1;
        sort(v.begin(),v.end());
        while(i>=0 && W)
        {
            if(v[i].second.second<=W)
            {
                profit+=v[i].second.first;
                W-=v[i].second.second;
                i--;
            }
            else
            {
                profit+=double(W*v[i].second.first)/double(v[i].second.second);
                W=0;
            }
        }
        return profit;
    }
        
};
