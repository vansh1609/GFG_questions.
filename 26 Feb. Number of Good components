class Solution {
  public:
  void dfs(int source,vector<vector<int>> &adj,vector<int> &vis,int &vertex,int &edges)
  {
      vis[source]=1;
      vertex++;
      for(auto child:adj[source])
      {
          edges++;
          if(!vis[child])
          dfs(child,adj,vis,vertex,edges);
      }
  }
    int findNumberOfGoodComponent(int V, vector<vector<int>>& adj) {
        // code here
        vector<int> vis(V+1,0);
        int ans=0;
        for(int i=1;i<=V;i++)
        {
            if(!vis[i])
            {
                int vertex=0;
                int edges=0;
                dfs(i,adj,vis,vertex,edges);
                if(edges==((vertex)*(vertex-1)))
                ans++;
            }
        }
        return ans;
    }
};
